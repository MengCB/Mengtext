----------------------vue.js
菜鸟教程:
https://www.runoob.com/vue2/vue-tutorial.html
官方教程:
https://cn.vuejs.org/v2/guide/

Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架.

-----------入门
el: '#app',  // element --> "#app" element是dom元素

v-bind 特性被称为指令。指令带有前缀 v-，以表示它们是 Vue 提供的特殊特性。
v-bind:title="message"----// vue绑定事件(bind)

v-if 控制切换一个元素是否显示
app3.seen = false，你会发现之前显示的消息消失

v-for 指令可以绑定数组的数据来渲染一个项目列表
		    <li v-for="todo in todos"> <!-- todo是一个变量 todos数组名 -->
		      {{ todo.text }}
		    </li>

app4.todos.push({ text: '新项目' })，你会发现列表最后添加了一个新项目。.pop出栈


v-on 指令添加一个事件监听器，通过它调用在 Vue 实例中定义的方法

v-on:click="reverseMessage"  定义vue的事件,不污染全局

--------- v-model(模型)--双向绑定
v-model 指令，它能轻松实现表单输入和应用状态之间的双向绑定。

----------------------vue的坑
data:{
   message: "4050"
}
{{ message % 100 + 20}} 
{{message % 100}}  %时直接让字符串转换成数字
{{message + 20 }} +的时候为字符串拼接


------vue不能相互嵌套,这种做法不允许
rander 渲染

jsonp的理解 // 跨域

----------------mathod方式的限制:
1.是一个组件
2.返回值return

--------------观察和响应 Vue 实例上的数据变动的三种方法:
computed计算,method方法,watch侦听

@click == v-on:click


$event 指定为事件源



data2update.append("faceImage",$('#filexxxxxxxx')[0].files[0]); 

var data2update = new window.FormData();
				
				for (var x in this.formData) {
					data2update.append(x, this.formData[x])
				}				
				
	$.ajax({
					type: 'POST',					
					url: "/file_upload",
					processData: false, // 使数据不做处理  // 必填!!!!
					//contentType: "multipart/form-data;",
					contentType: false, // 不要设置Content-Type请求头 // 必填!!!!
					data: data2update,
					success: function(res) {
						console.info(res);
					},
					error: function(a, b) {
						console.info(a);
					}
				});



------------------------vue组件(component)

组件是可复用的VUE实例

一个组件的 data 选项必须是一个函数

每个组件必须只有一个根元素
------------------------------------------------
------vue绑定样式
  :style 等于 v-bind:style  ---- vue绑定样式
  
 vue组件向外传值 使用$emit 和 $event (查看vue-demo7)



-----------------先有数据再有组件
因为他依赖数据去渲染自己

注意那些 prop 会在一个组件实例创建之前进行验证，所以实例的属性 
(如 data、computed 等) 在 default 或 validator 函数中是不可用的。






